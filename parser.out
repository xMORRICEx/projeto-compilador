Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> IDENTIFICADOR ATRIBUICAO expression
Rule 2     expression -> expression OPERADOR expression
Rule 3     expression -> IDENTIFICADOR
Rule 4     expression -> NUMERO

Terminals, with rules where they appear

ATRIBUICAO           : 1
IDENTIFICADOR        : 1 3
NUMERO               : 4
OPERADOR             : 2
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 2 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . IDENTIFICADOR ATRIBUICAO expression
    (2) expression -> . expression OPERADOR expression
    (3) expression -> . IDENTIFICADOR
    (4) expression -> . NUMERO

    IDENTIFICADOR   shift and go to state 2
    NUMERO          shift and go to state 3

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (2) expression -> expression . OPERADOR expression

    OPERADOR        shift and go to state 4


state 2

    (1) expression -> IDENTIFICADOR . ATRIBUICAO expression
    (3) expression -> IDENTIFICADOR .

    ATRIBUICAO      shift and go to state 5
    OPERADOR        reduce using rule 3 (expression -> IDENTIFICADOR .)
    $end            reduce using rule 3 (expression -> IDENTIFICADOR .)


state 3

    (4) expression -> NUMERO .

    OPERADOR        reduce using rule 4 (expression -> NUMERO .)
    $end            reduce using rule 4 (expression -> NUMERO .)


state 4

    (2) expression -> expression OPERADOR . expression
    (1) expression -> . IDENTIFICADOR ATRIBUICAO expression
    (2) expression -> . expression OPERADOR expression
    (3) expression -> . IDENTIFICADOR
    (4) expression -> . NUMERO

    IDENTIFICADOR   shift and go to state 2
    NUMERO          shift and go to state 3

    expression                     shift and go to state 6

state 5

    (1) expression -> IDENTIFICADOR ATRIBUICAO . expression
    (1) expression -> . IDENTIFICADOR ATRIBUICAO expression
    (2) expression -> . expression OPERADOR expression
    (3) expression -> . IDENTIFICADOR
    (4) expression -> . NUMERO

    IDENTIFICADOR   shift and go to state 2
    NUMERO          shift and go to state 3

    expression                     shift and go to state 7

state 6

    (2) expression -> expression OPERADOR expression .
    (2) expression -> expression . OPERADOR expression

    OPERADOR        reduce using rule 2 (expression -> expression OPERADOR expression .)
    $end            reduce using rule 2 (expression -> expression OPERADOR expression .)

  ! OPERADOR        [ shift and go to state 4 ]


state 7

    (1) expression -> IDENTIFICADOR ATRIBUICAO expression .
    (2) expression -> expression . OPERADOR expression

  ! shift/reduce conflict for OPERADOR resolved as shift
    $end            reduce using rule 1 (expression -> IDENTIFICADOR ATRIBUICAO expression .)
    OPERADOR        shift and go to state 4

  ! OPERADOR        [ reduce using rule 1 (expression -> IDENTIFICADOR ATRIBUICAO expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPERADOR in state 7 resolved as shift
